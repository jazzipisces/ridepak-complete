version: '3.8'

services:
  # Customer App (Development)
  customer-app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_ENVIRONMENT=development
    stdin_open: true
    tty: true
    networks:
      - pakride-network

  # Customer App (Production)
  customer-app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=https://api.pakride.com
      - REACT_APP_ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - pakride-network

  # Backend API (Mock for development)
  api-server:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "5000:5000"
    volumes:
      - ./mock-api:/app
    command: npm start
    environment:
      - NODE_ENV=development
      - PORT=5000
    networks:
      - pakride-network

  # Database (PostgreSQL)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=pakride
      - POSTGRES_USER=pakride_user
      - POSTGRES_PASSWORD=pakride_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pakride-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pakride-network

  # Nginx (Load Balancer)
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - customer-app-prod
      - api-server
    networks:
      - pakride-network

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - pakride-network

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - pakride-network

networks:
  pakride-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  grafana_data: